#!/bin/bash
# Debian-WS Main Entry Point
# Description: Interactive installer for Debian workstation setup
# Author: Generated by GitHub Copilot for Debian-WS

set -euo pipefail

# Source required dependencies
SCRIPT_DIR="$(dirname "$0")"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

source "$PROJECT_ROOT/lib/core/logging.sh"

# Display banner
show_banner() {
    echo "
██████╗ ███████╗██████╗ ██╗ █████╗ ███╗   ██╗    ██╗    ██╗███████╗
██╔══██╗██╔════╝██╔══██╗██║██╔══██╗████╗  ██║    ██║    ██║██╔════╝
██║  ██║█████╗  ██████╔╝██║███████║██╔██╗ ██║    ██║ █╗ ██║███████╗
██║  ██║██╔══╝  ██╔══██╗██║██╔══██║██║╚██╗██║    ██║███╗██║╚════██║
██████╔╝███████╗██████╔╝██║██║  ██║██║ ╚████║    ╚███╔███╔╝███████║
╚═════╝ ╚══════╝╚═════╝ ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝     ╚══╝╚══╝ ╚══════╝
"
    echo "Debian Workstation Setup Tool"
    echo "=============================="
    echo
}

# Show main menu
show_main_menu() {
    echo "Main Menu:"
    echo "  1. Install Required System Applications"
    echo "  2. Install Optional Terminal Applications"
    echo "  3. Install Optional Desktop Applications"
    echo "  4. System Configuration"
    echo "  5. Update System"
    echo "  6. Show Installation Status"
    echo "  7. Exit"
    echo
}

# Check system compatibility
check_system_compatibility() {
    log_info "Checking system compatibility..."

    # Check for Debian/Ubuntu
    if ! command -v apt &> /dev/null; then
        log_error "This tool requires a Debian-based system with APT package manager"
        return 1
    fi

    # Check for GNOME desktop environment
    if [[ "${XDG_CURRENT_DESKTOP:-}" != *"GNOME"* ]] && [[ "${DESKTOP_SESSION:-}" != *"gnome"* ]]; then
        log_warning "This tool is optimized for GNOME desktop environment"
        echo "Current desktop: ${XDG_CURRENT_DESKTOP:-Unknown}"
        read -p "Continue anyway? (y/N): " continue_choice
        if [[ "${continue_choice,,}" != "y" ]]; then
            return 1
        fi
    fi

    # Check for sudo access
    if ! sudo -n true 2>/dev/null; then
        log_info "Testing sudo access..."
        if ! sudo true; then
            log_error "This tool requires sudo access"
            return 1
        fi
    fi

    log_success "System compatibility check passed"
    return 0
}

# Install required system applications
install_required_apps() {
    log_info "Starting required system applications installation..."

    if ! "$PROJECT_ROOT/install/system/install-required.sh"; then
        log_error "Failed to install required system applications"
        return 1
    fi

    log_success "Required system applications installation complete"
    return 0
}

# Install optional terminal applications
install_optional_terminal_apps() {
    log_info "Optional terminal applications installation..."
    log_warning "Terminal applications installation not yet implemented"
    echo "This feature will be available in a future version."
    return 0
}

# Install optional desktop applications
install_optional_desktop_apps() {
    log_info "Starting optional desktop applications installation..."

    if ! "$PROJECT_ROOT/install/apps/desktop/install-desktop-apps.sh"; then
        log_error "Failed to install optional desktop applications"
        return 1
    fi

    log_success "Optional desktop applications installation complete"
    return 0
}

# System configuration
configure_system() {
    log_info "System configuration..."
    log_warning "System configuration not yet implemented"
    echo "This feature will be available in a future version."
    return 0
}

# Update system
update_system() {
    log_info "Updating system packages..."

    # Update APT packages
    sudo apt update && sudo apt upgrade -y

    # Update Flatpak applications
    if command -v flatpak &> /dev/null; then
        log_info "Updating Flatpak applications..."
        flatpak update -y
    fi

    log_success "System update complete"
    return 0
}

# Show installation status
show_status() {
    echo "Installation Status:"
    echo "==================="
    echo

    # Check required terminal tools
    echo "Required Terminal Tools:"
    for tool in curl git unzip gum fastfetch; do
        if command -v "$tool" &> /dev/null; then
            echo "  ✓ $tool"
        else
            echo "  ✗ $tool"
        fi
    done
    echo

    # Check required desktop applications
    echo "Required Desktop Applications:"

    # Check Alacritty
    if command -v alacritty &> /dev/null || flatpak list | grep -q alacritty; then
        echo "  ✓ Alacritty"
    else
        echo "  ✗ Alacritty"
    fi

    # Check Firefox
    if command -v firefox-esr &> /dev/null; then
        echo "  ✓ Firefox ESR"
    else
        echo "  ✗ Firefox ESR"
    fi

    # Check GNOME Tweaks
    if command -v gnome-tweaks &> /dev/null; then
        echo "  ✓ GNOME Tweaks"
    else
        echo "  ✗ GNOME Tweaks"
    fi

    # Check Flatpak
    if command -v flatpak &> /dev/null; then
        echo "  ✓ Flatpak"
        local flatpak_count=$(flatpak list --app | wc -l)
        echo "    Installed apps: $flatpak_count"
    else
        echo "  ✗ Flatpak"
    fi

    echo
}

# Main function
main() {
    show_banner

    # Check system compatibility
    if ! check_system_compatibility; then
        log_error "System compatibility check failed"
        exit 1
    fi

    while true; do
        echo
        show_main_menu
        read -p "Select option (1-7): " choice
        echo

        case "$choice" in
            1)
                install_required_apps
                ;;
            2)
                install_optional_terminal_apps
                ;;
            3)
                install_optional_desktop_apps
                ;;
            4)
                configure_system
                ;;
            5)
                update_system
                ;;
            6)
                show_status
                ;;
            7)
                log_info "Exiting Debian-WS installer"
                exit 0
                ;;
            *)
                log_error "Invalid option: $choice"
                ;;
        esac

        echo
        read -p "Press Enter to continue..."
    done
}

# Execute main function
main "$@"
